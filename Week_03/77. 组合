//给定两个整数 n 和 k，返回 1 ... n 中所有可能的 k 个数的组合。
//
// 示例:
//
// 输入: n = 4, k = 2
//输出:
//[
//  [2,4],
//  [3,4],
//  [2,3],
//  [1,2],
//  [1,3],
//  [1,4],
//]
// Related Topics 回溯算法
// 👍 330 👎 0


//leetcode submit region begin(Prohibit modification and deletion)
class Solution {

    int n,k;
    List<List<Integer>> result = new LinkedList<>();

    public List<List<Integer>> combine(int n, int k) {
        this.n = n;
        this.k = k;
        backtrack(new LinkedList<>(),1);
        return result;
    }

    private void backtrack(LinkedList<Integer> list , int first){
        if(list.size() == k){
            result.add(new LinkedList<>(list));
        }

        for(int i = first ; i < n + 1 ; i ++){
            list.add(i);
            backtrack(list, i + 1);
            list.removeLast();
        }
    }
}
//leetcode submit region end(Prohibit modification and deletion)
